services:
  biarbala:
    build: .
    ports:
      - "8080:8080"  # gRPC
      - "8081:8081"  # HTTP
      - "9090:9090"  # Metrics
    environment:
      - DATABASE_MONGODB_URI=mongodb://mongodb:27017
      - CACHE_REDIS_ADDR=redis:6379
      - STORAGE_MINIO_ENDPOINT=minio:9000
      - STORAGE_MINIO_ACCESS_KEY=minioadmin
      - STORAGE_MINIO_SECRET_KEY=minioadmin
      - STORAGE_MINIO_USE_SSL=false
      - STORAGE_MINIO_BUCKET_NAME=biarbala
    volumes:
      - ./temp:/app/temp
    depends_on:
      - mongodb
      - redis
      - minio
      - keycloak
    networks:
      - biarbala-network

  mongodb:
    image: mongo:7.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=biarbala
    networks:
      - biarbala-network

  redis:
    image: redis:7.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - biarbala-network

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - biarbala-network

  postgresql:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - biarbala-network

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    ports:
      - "8082:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin123
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgresql:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak
      - KC_HOSTNAME=localhost
      - KC_HOSTNAME_PORT=8082
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_HTTP_ENABLED=true
      - KC_PROXY=edge
    command: start-dev
    depends_on:
      - postgresql
    networks:
      - biarbala-network

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - biarbala
    networks:
      - biarbala-network

volumes:
  mongodb_data:
  redis_data:
  minio_data:
  postgres_data:

networks:
  biarbala-network:
    driver: bridge
